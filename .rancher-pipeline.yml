stages:
- name: Build
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: img_fiware-iot-agent_v1.9.0:${CICD_EXECUTION_SEQUENCE}
      pushRemote: true
      #registry: 192.168.100.176:5000
      registry: csp2-centos-1:5000
    env:
      PLUGIN_DEBUG: "true"
      PLUGIN_INSECURE: "true"
      PLUGIN_STORAGE_PATH: /var/lib/docker2
- name: Deploy
  steps:
  - applyYamlConfig:
      path: ./IoT-Agent-Deployment.yml
  - applyYamlConfig:
      path: ./IoT-Agent-service.yml
  - applyYamlConfig:
      path: ./Ingress.yml
  - runScriptConfig:
      image: python:latest
      shellScript: |-
        apt-get update
        apt-get install sshpass
        sshpass -p password ssh -tt -o StrictHostKeyChecking=no newuser@192.168.100.178 ./check_pod_status.sh p-kpggk-pipeline iot-agent
- name: test
  steps:
  - runScriptConfig:
      image: python:latest
      shellScript: |
        apt-get update
        echo Y | apt-get install npm
        npm -v
        sleep 300
        npm install -g newman
        newman run ./IOT_agent.postman_collection.json
    when:
      branch:
        include:
        - master
      event:
        include:
        - pull_request
        - push
  when:
    branch: {}
    event: {}
timeout: 500
branch:
  include:
  - master
notification: {}
